
#file uploaded through webbrowser

#ile then gets uploaded (saved) to webserver

#in webserver-> there will be an upload directory generated by the program.
#files get saved to this directory

#one of the used case can be that this program can be component of bigger program.

#we will use Flask for building webapp.
#small webapps ->Flask is good to use

from flask import Flask, render_template_string,request
import os
app =Flask(__name__) #initiatise Flask
app.config['UPLOAD_FOLDER'] = 'uploads'  #uploads folder needs to be created to load userfile.so we are declaring wiht parameter.
os.makedirs(app.config['UPLOAD_FOLDER'] , exist_ok=True)  # if upload folder exists, then not overwritten.
#if not exists then creates


#now we write views
#creating 1st view.each view we map a URL
@app.route('/',methods = ['GET','POST'])
def upload_file():
    upload_message =""  #empty string to display file success message when not empty on webapp
    if request.method == "POST":
        print("Hey file has been loaded")

        # access the file object that user uploads using requests method from flask library
        #request.files gives the immutable dict tuple object from which we an extract the file name
        #and the ['FILE'] gives the actual file .
        file = request.files['file']  #extracting the file object
        print(file)
        filename = file.filename   #accessing file  from the tuple
        print(type(filename), filename)
        filepath = os.path.join(app.config['UPLOAD_FOLDER'] , filename)
        file.save(filepath)
        upload_message ="File uploaded successfully!"

    return render_template_string("""
    <html>
        <title>development server - Upload new file</title> 
        <h1>Upload new file</h1>
        <form method=post enctype=multipart/form-data>
            <input type=file name =file>
            <input type=submit value=Upload>
        </form>
        
        {% if upload_message %}
         {{upload_message}}
         {%endif%}
         
        
    
    </html>
    """,upload_message =upload_message )

app.run(debug=True)
